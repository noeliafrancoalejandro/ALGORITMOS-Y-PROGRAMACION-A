#include"conio.h"
#include<iostream>
#include <string.h>
using namespace std;
struct regamigo{
char nombre [30];
int edad;
char sexo;
};
void cargar(regamigo v[],int n){
	int i;
	for(i=0;i<n;i++){
	cout<<"introducir nombres ";
	do{
	gets(v[i].nombre);
	}
while(strlen (v[i].nombre)==0);
cout<<"edad";
cin>>v[i].edad;
cout<<"sexo?";
cin>>v[i].sexo;
	}
}
void mostrar (regamigo v[],int n){
int i;
for(i=0;i<n;i++){
	cout<<"NOMBRE DEL REGISTRO :"<<v[i].nombre<<" "<<endl;
	cout<<"EDAD DEL REGISTRO :"<<v[i].edad<<" "<<endl;
	cout<<"SEXO DEL REGISTRO :"<<v[i].sexo<<" "<<endl;

}
}
int mayor(regamigo v[],int n){
int i,edadmayor=0;
for(i=0;i<n;i++){
	if(v[i].edad>edadmayor){
	
		edadmayor=v[i].edad;

	}
}
return(edadmayor);
}
regamigo datosmayor(regamigo v[],int n){
int i,edadmayor=0;
regamigo amigomay;
for(i=0;i<n;i++){
	if(v[i].edad>edadmayor){
	
		edadmayor=v[i].edad;
        amigomay=v[i];
	}
}
return(amigomay);
}
void ordenar(regamigo v[],int n){
regamigo aux;
for (int i=0;i<n;i++){
	for(int k=i;k<n;k++){
if(v[i].edad< v[k].edad)
{
aux=v[i];
v[i]=v[k];
v[k]=aux;
}
	}
}
}
void eliminar(regamigo v[],int &n){
	int i,k,z;
	z=mayor(v,n);
	for(i=0;i<n;i++){
		if(v[i].edad==z){
		for(k=i;k<n;k++){
			v[k]=v[k+1];
		}
		i--;
		n--;
		}
	}
}
void main(){
	int n,opc,c,s;
	regamigo v[30],aux;	
	do{
		cout<<"*******MENU********\n\n"<<endl;
cout<<"1. CARGAR ESTRUCTURA"<<endl;
cout<<"2. MOSTRAR ESTRUCTURA"<<endl;
cout<<"3. LA EDAD MAYOR DE TODOS "<<endl;
cout<<"4. DATOS DE EL MAYOR  "<<endl;
cout<<"5.ORDENAR EDAD"<<endl;
cout<<"6. ELIMINAR EL MAYOR"<<endl;
cout<< "ingrese opcion";
cin>>opc;
	switch(opc){
	case 1:
	cout<<"CUANTOS AMIGOS DESEA REGISTRAR ";
	cin>>n;	
		cargar(v,n);
			break;
		case 2:
		mostrar(v,n);
			break;
		case 3:
       s=mayor(v,n);
	   cout<<"la edad mayor es :";
	   cout<<s;
	   break;
		case 4:
    aux = datosmayor(v,n);
	cout<<"los datos del mayor son"<<aux.nombre<<" "<<aux.edad<<" "<<aux.sexo;
	break;
		case 5:
	ordenar(v,n);
	mostrar(v,n);
	break;
	case 6:
		eliminar(v,n);
		mostrar(v,n);
		break;
}
	}
	while(opc!=0);
}
